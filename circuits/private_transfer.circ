name private_transfer
// Public inputs
input old_root 0
input new_root 0
input nullifier 0
input commitment 0

// Private inputs
input sender_balance 100
input receiver_balance 50
input amount 30
input sender_nonce 1
input receiver_nonce 1

// Constants
const zero 0
const one 1

// Verify sender has sufficient balance
sub sender_balance amount remaining_balance
gte remaining_balance zero sufficient_balance

// Generate nullifier from sender's private key and nonce
hash sender_nonce nullifier_hash
eq nullifier_hash nullifier valid_nullifier

// Update balances
add receiver_balance amount new_receiver_balance
sub sender_balance amount new_sender_balance

// Generate new commitment
hash new_sender_balance new_commitment
hash new_receiver_balance receiver_commitment

// Verify all constraints
mul sufficient_balance valid_nullifier valid_transaction
eq valid_transaction one transaction_valid 